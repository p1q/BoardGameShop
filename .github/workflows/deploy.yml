name: BoardGameShop CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Package Docker Image
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image from scratch
        run: |
          docker build \
            --no-cache \
            --pull \
            --force-rm \
            --squash \
            -f Dockerfile \
            -t django-board-game .

      - name: Save Docker image to tarball
        run: docker save django-board-game -o django-board-game.tar

      - name: Upload Docker image tarball
        uses: actions/upload-artifact@v4
        with:
          name: django-game-tar
          path: django-board-game.tar

  deploy:
    name: Download & Deploy on EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Docker image tarball
        uses: actions/download-artifact@v4
        with:
          name: django-game-tar
          path: .

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker rm -f $(docker ps -aq) || true
            docker rmi -f $(docker images -q) || true
            docker load -i django-board-game.tar

            docker run -d \
              --name board-game-app \
              -e DB_HOST="${{ secrets.DB_HOST }}" \
              -e DB_PORT="${{ secrets.DB_PORT }}" \
              -e DB_NAME="${{ secrets.DB_NAME }}" \
              -e DB_USER="${{ secrets.DB_USER }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e DB_SSLMODE="${{ secrets.DB_SSLMODE }}" \
              -e ALLOWED_HOSTS="${{ secrets.ALLOWED_HOSTS }}" \
              -e DJANGO_DEBUG="${{ secrets.DJANGO_DEBUG }}" \
              -p 8000:8000 \
              django-board-game \
              python manage.py runserver 0.0.0.0:8000
