name: BoardGameShop CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Package Docker Image
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image from scratch
        run: |
          docker build \
            --no-cache \
            --pull \
            --force-rm \
            -f Dockerfile \
            -t django-board-game .

      - name: Save Docker image to tarball
        run: docker save django-board-game -o django-board-game.tar

      - name: Upload Docker image tarball
        uses: actions/upload-artifact@v4
        with:
          name: django-board-game-tar
          path: django-board-game.tar

  deploy:
    name: Download, Copy & Deploy on EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Docker image tarball
        uses: actions/download-artifact@v4
        with:
          name: django-board-game-tar
          path: .

      - name: List files to verify download
        run: ls -R

      - name: Move tarball if needed
        run: |
          if [ -f "./django-board-game-tar/django-board-game.tar" ]; then
            mv ./django-board-game-tar/django-board-game.tar ./django-board-game.tar
          elif [ -f "./django-board-game.tar" ]; then
            echo "File already in place."
          else
            echo "ERROR: docker tarball not found!"
            exit 1
          fi

      - name: Copy Docker image to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          source: "django-board-game.tar"
          target: "~/django-board-game.tar"

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Удаление всех контейнеров..."
            docker ps -aq | xargs -r docker rm -f

            echo "Удаление всех образов..."
            docker images -q | xargs -r docker rmi -f

            echo "Загрузка образа..."
            docker load -i /home/ubuntu/django-board-game.tar/django-board-game.tar

            echo "Запуск нового контейнера..."
            docker run -d \
              --name board-game-app \
              -e DB_HOST="${{ secrets.DB_HOST }}" \
              -e DB_PORT="${{ secrets.DB_PORT }}" \
              -e DB_NAME="${{ secrets.DB_NAME }}" \
              -e DB_USER="${{ secrets.DB_USER }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e DB_SSLMODE="${{ secrets.DB_SSLMODE }}" \
              -e ALLOWED_HOSTS="${{ secrets.ALLOWED_HOSTS }}" \
              -e DJANGO_DEBUG="${{ secrets.DJANGO_DEBUG }}" \
              -p 8000:8000 \
              django-board-game \
              python manage.py runserver 0.0.0.0:8000
